// read XML path
args = getArgument();
args = split(args, " ");

xmlpath = args[0];
n5datapath = args[1];
n5xmlpath = args[2];

run("Flip Axes", "select="+xmlpath+" flip_z");
run("Calculate pairwise shifts ...", "browse="+xmlpath+" process_angle=[All angles] process_channel=[All channels] process_illumination=[All illuminations] process_tile=[All tiles] process_timepoint=[All Timepoints] method=[Phase Correlation] show_expert_grouping_options how_to_treat_timepoints=compare how_to_treat_channels=group how_to_treat_illuminations=group how_to_treat_angles=[treat individually] how_to_treat_tiles=compare downsample_in_x=16 downsample_in_y=16 downsample_in_z=16");
run("Filter pairwise shifts ...", "select="+xmlpath+" filter_by_link_quality min_r=.6 max_r=1 max_shift_in_x=0 max_shift_in_y=0 max_shift_in_z=0 max_displacement=0");
run("Filter pairwise shifts ...", "select"+xmlpath+" min_r=0 max_r=1 filter_by_shift_in_each_dimension max_shift_in_x=150 max_shift_in_y=150 max_shift_in_z=150 max_displacement=0");
run("Calculate pairwise shifts ...", "select="+xmlpath+" process_angle=[All angles] process_channel=[All channels] process_illumination=[All illuminations] process_tile=[All tiles] process_timepoint=[All Timepoints] method=[Interest-Point Registration (with new Interest Points)] show_expert_grouping_options how_to_treat_timepoints=compare how_to_treat_channels=group how_to_treat_illuminations=group how_to_treat_angles=[treat individually] how_to_treat_tiles=[treat individually] type_of_interest_point_detection=Difference-of-Gaussian label_interest_points=features limit_amount_of_detections subpixel_localization=[3-dimensional quadratic fit] interest_point_specification=[Comparable to Sample & small (beads)] downsample_xy=4x downsample_z=4x maximum_number=3000 type_of_detections_to_use=Brightest compute_on=[CPU (Java)] registration_algorithm=[Precise descriptor-based (translation invariant)] registration_over_time=[All-to-all timepoints matching (global optimization)] registration_in_between_views=[Only compare overlapping views (according to current transformations)] interest_point_inclusion=[Compare all interest point of overlapping views] interest_points=features group_channels number_of_neighbors=3 redundancy=1 significance=3 allowed_error_for_ransac=5 ransac_iterations=Normal");
run("Optimize globally and apply shifts ...", "select="+xmlpath+" process_angle=[All angles] process_channel=[All channels] process_illumination=[All illuminations] process_tile=[All tiles] process_timepoint=[All Timepoints] relative=2.5 absolute=3.5 global_optimization_strategy=[Two-Round using Metadata to align unconnected Tiles] show_expert_grouping_options how_to_treat_timepoints=compare how_to_treat_channels=group how_to_treat_illuminations=group how_to_treat_angles=[treat individually] how_to_treat_tiles=compare fix_group_0-0");
run("Register Dataset based on Interest Points", "browse="+xmlpath+" select=D:/20230602_humanOB/processed/deskewed_bdv//humanOB.xml process_angle=[All angles] process_channel=[All channels] process_illumination=[All illuminations] process_tile=[All tiles] process_timepoint=[All Timepoints] registration_algorithm=[Assign closest-points with ICP (no invariance)] registration_over_time=[Match against one reference timepoint (no global optimization)] registration_in_between_views=[Only compare overlapping views (according to current transformations)] interest_point_inclusion=[Only compare interest points that overlap between views (according to current transformations)] interest_points=features group_channels reference=0 transformation=Affine regularize_model model_to_regularize_with=Rigid lamba=0.10 maximal_distance=5 maximal_number=100 use_ransac allowed_error_for_ransac=3 ransac_iterations=200 minimal_number=12 show_timeseries_statistics interestpoint_grouping=[Do not group interest points, compute views independently] interest=5");
run("Fuse dataset ...", "select="+xmlpath+" process_angle=[All angles] process_channel=[Single channel (Select from List)] process_illumination=[All illuminations] process_tile=[All tiles] process_timepoint=[Single Timepoint (Select from List)] processing_channel=[channel 0] processing_timepoint=[Timepoint 0] bounding_box=[Currently Selected Views] downsampling=4 interpolation=[Linear Interpolation] pixel_type=[16-bit unsigned integer] interest_points_for_non_rigid=[-= Disable Non-Rigid =-] blend produce=[Each timepoint & channel] fused_image=[ZARR/N5/HDF5 export using N5-API] define_input=[Auto-load from input data (values shown below)] export=N5 create n5_dataset_path="+n5datapath+" xml_output_file="+n5xmlpath+" viewid_timepointid=0 viewid_setupid=0");
eval("script","System.exit(0);");